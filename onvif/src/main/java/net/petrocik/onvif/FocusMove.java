package net.petrocik.onvif;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public  class FocusMove extends AttributeContainer implements KvmSerializable
{

    
    private transient java.lang.Object __source;    
    
    public AbsoluteFocus Absolute;
    
    public RelativeFocus Relative;
    
    public ContinuousFocus Continuous;

    

    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }


    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("Absolute"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Absolute = (AbsoluteFocus)__envelope.get(j,AbsoluteFocus.class,false);
            }
            return true;
        }
        if (info.name.equals("Relative"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Relative = (RelativeFocus)__envelope.get(j,RelativeFocus.class,false);
            }
            return true;
        }
        if (info.name.equals("Continuous"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Continuous = (ContinuousFocus)__envelope.get(j,ContinuousFocus.class,false);
            }
            return true;
        }
        return false;
    }    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.Absolute!=null?this.Absolute:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==1)
        {
            return this.Relative!=null?this.Relative:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==2)
        {
            return this.Continuous!=null?this.Continuous:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            if(propertyIndex==0)
            {
                info.type = AbsoluteFocus.class;
                info.name = "Absolute";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==1)
            {
                info.type = RelativeFocus.class;
                info.name = "Relative";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==2)
            {
                info.type = ContinuousFocus.class;
                info.name = "Continuous";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
