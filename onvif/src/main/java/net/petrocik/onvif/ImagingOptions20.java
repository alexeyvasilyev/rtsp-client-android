package net.petrocik.onvif;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public  class ImagingOptions20 extends AttributeContainer implements KvmSerializable
{

    
    private transient java.lang.Object __source;    
    
    public BacklightCompensationOptions20 BacklightCompensation;
    
    public FloatRange Brightness;
    
    public FloatRange ColorSaturation;
    
    public FloatRange Contrast;
    
    public ExposureOptions20 Exposure;
    
    public FocusOptions20 Focus;
    
    public java.util.ArrayList< Enums.IrCutFilterMode> IrCutFilterModes =new java.util.ArrayList<Enums.IrCutFilterMode >();
    
    public FloatRange Sharpness;
    
    public WideDynamicRangeOptions20 WideDynamicRange;
    
    public WhiteBalanceOptions20 WhiteBalance;
    
    public ImagingOptions20Extension Extension;

    

    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }


    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("BacklightCompensation"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.BacklightCompensation = (BacklightCompensationOptions20)__envelope.get(j,BacklightCompensationOptions20.class,false);
            }
            return true;
        }
        if (info.name.equals("Brightness"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Brightness = (FloatRange)__envelope.get(j,FloatRange.class,false);
            }
            return true;
        }
        if (info.name.equals("ColorSaturation"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ColorSaturation = (FloatRange)__envelope.get(j,FloatRange.class,false);
            }
            return true;
        }
        if (info.name.equals("Contrast"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Contrast = (FloatRange)__envelope.get(j,FloatRange.class,false);
            }
            return true;
        }
        if (info.name.equals("Exposure"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Exposure = (ExposureOptions20)__envelope.get(j,ExposureOptions20.class,false);
            }
            return true;
        }
        if (info.name.equals("Focus"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Focus = (FocusOptions20)__envelope.get(j,FocusOptions20.class,false);
            }
            return true;
        }
        if (info.name.equals("IrCutFilterModes"))
        {
            if(obj!=null)
            {
                if(this.IrCutFilterModes==null)
                {
                    this.IrCutFilterModes = new java.util.ArrayList< Enums.IrCutFilterMode>();
                }
                java.lang.Object j =obj;
                Enums.IrCutFilterMode j1= Enums.IrCutFilterMode.fromString(j.toString());
                this.IrCutFilterModes.add(j1);
            }
            return true;
        }
        if (info.name.equals("Sharpness"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Sharpness = (FloatRange)__envelope.get(j,FloatRange.class,false);
            }
            return true;
        }
        if (info.name.equals("WideDynamicRange"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.WideDynamicRange = (WideDynamicRangeOptions20)__envelope.get(j,WideDynamicRangeOptions20.class,false);
            }
            return true;
        }
        if (info.name.equals("WhiteBalance"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.WhiteBalance = (WhiteBalanceOptions20)__envelope.get(j,WhiteBalanceOptions20.class,false);
            }
            return true;
        }
        if (info.name.equals("Extension"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Extension = (ImagingOptions20Extension)__envelope.get(j,ImagingOptions20Extension.class,false);
            }
            return true;
        }
        return false;
    }    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.BacklightCompensation!=null?this.BacklightCompensation:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==1)
        {
            return this.Brightness!=null?this.Brightness:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==2)
        {
            return this.ColorSaturation!=null?this.ColorSaturation:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==3)
        {
            return this.Contrast!=null?this.Contrast:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==4)
        {
            return this.Exposure!=null?this.Exposure:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==5)
        {
            return this.Focus!=null?this.Focus:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex>=6 && propertyIndex < 6+this.IrCutFilterModes.size())
        {
            Enums.IrCutFilterMode IrCutFilterModes = this.IrCutFilterModes.get(propertyIndex-(6));
            return IrCutFilterModes!=null?IrCutFilterModes.toString():SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==6+this.IrCutFilterModes.size())
        {
            return this.Sharpness!=null?this.Sharpness:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==7+this.IrCutFilterModes.size())
        {
            return this.WideDynamicRange!=null?this.WideDynamicRange:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==8+this.IrCutFilterModes.size())
        {
            return this.WhiteBalance!=null?this.WhiteBalance:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==9+this.IrCutFilterModes.size())
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 10+IrCutFilterModes.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            if(propertyIndex==0)
            {
                info.type = BacklightCompensationOptions20.class;
                info.name = "BacklightCompensation";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==1)
            {
                info.type = FloatRange.class;
                info.name = "Brightness";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==2)
            {
                info.type = FloatRange.class;
                info.name = "ColorSaturation";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==3)
            {
                info.type = FloatRange.class;
                info.name = "Contrast";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==4)
            {
                info.type = ExposureOptions20.class;
                info.name = "Exposure";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==5)
            {
                info.type = FocusOptions20.class;
                info.name = "Focus";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=6 && propertyIndex < 6+this.IrCutFilterModes.size())
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IrCutFilterModes";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==6+this.IrCutFilterModes.size())
            {
                info.type = FloatRange.class;
                info.name = "Sharpness";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==7+this.IrCutFilterModes.size())
            {
                info.type = WideDynamicRangeOptions20.class;
                info.name = "WideDynamicRange";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==8+this.IrCutFilterModes.size())
            {
                info.type = WhiteBalanceOptions20.class;
                info.name = "WhiteBalance";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==9+this.IrCutFilterModes.size())
            {
                info.type = ImagingOptions20Extension.class;
                info.name = "Extension";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
