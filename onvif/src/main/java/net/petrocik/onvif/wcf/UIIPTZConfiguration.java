package net.petrocik.onvif.wcf;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public  class UIIPTZConfiguration extends UIIConfigurationEntity implements KvmSerializable
{

    
    public String NodeToken;
    
    public String DefaultAbsolutePantTiltPositionSpace;
    
    public String DefaultAbsoluteZoomPositionSpace;
    
    public String DefaultRelativePanTiltTranslationSpace;
    
    public String DefaultRelativeZoomTranslationSpace;
    
    public String DefaultContinuousPanTiltVelocitySpace;
    
    public String DefaultContinuousZoomVelocitySpace;
    
    public UIIPTZSpeed DefaultPTZSpeed;
    
    public String DefaultPTZTimeout;
    
    public UIIPanTiltLimits PanTiltLimits;
    
    public UIIZoomLimits ZoomLimits;
    
    public UIIPTZConfigurationExtension Extension;
    
    public Integer MoveRamp=0;
    
    public Integer PresetRamp=0;
    
    public Integer PresetTourRamp=0;

    

    @Override
    public void loadFromSoap(java.lang.Object paramObj,UIIExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);

		if (inObj.hasAttribute("MoveRamp"))
        {	
            java.lang.Object j = inObj.getAttribute("MoveRamp");
            if (j != null)
            {
                MoveRamp = Integer.parseInt(j.toString());
            }
        }
		if (inObj.hasAttribute("PresetRamp"))
        {	
            java.lang.Object j = inObj.getAttribute("PresetRamp");
            if (j != null)
            {
                PresetRamp = Integer.parseInt(j.toString());
            }
        }
		if (inObj.hasAttribute("PresetTourRamp"))
        {	
            java.lang.Object j = inObj.getAttribute("PresetTourRamp");
            if (j != null)
            {
                PresetTourRamp = Integer.parseInt(j.toString());
            }
        }

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,UIIExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("NodeToken"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.NodeToken = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.NodeToken = (String)obj;
                }
                else{
                    this.NodeToken = "";
                }
            }
            return true;
        }
        if (info.name.equals("DefaultAbsolutePantTiltPositionSpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultAbsolutePantTiltPositionSpace = j.toString();
                    }
                }
                else{
                    this.DefaultAbsolutePantTiltPositionSpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultAbsoluteZoomPositionSpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultAbsoluteZoomPositionSpace = j.toString();
                    }
                }
                else{
                    this.DefaultAbsoluteZoomPositionSpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultRelativePanTiltTranslationSpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultRelativePanTiltTranslationSpace = j.toString();
                    }
                }
                else{
                    this.DefaultRelativePanTiltTranslationSpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultRelativeZoomTranslationSpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultRelativeZoomTranslationSpace = j.toString();
                    }
                }
                else{
                    this.DefaultRelativeZoomTranslationSpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultContinuousPanTiltVelocitySpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultContinuousPanTiltVelocitySpace = j.toString();
                    }
                }
                else{
                    this.DefaultContinuousPanTiltVelocitySpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultContinuousZoomVelocitySpace"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultContinuousZoomVelocitySpace = j.toString();
                    }
                }
                else{
                    this.DefaultContinuousZoomVelocitySpace = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("DefaultPTZSpeed"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.DefaultPTZSpeed = (UIIPTZSpeed)__envelope.get(j,UIIPTZSpeed.class,false);
            }
            return true;
        }
        if (info.name.equals("DefaultPTZTimeout"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DefaultPTZTimeout = UIIExtendedSoapSerializationEnvelope.getDateTimeConverter().convertDuration(j.toString());
                    }
                }
                else if (obj instanceof String){
                    this.DefaultPTZTimeout = (String)obj;
                }
                else{
                    this.DefaultPTZTimeout = "";
                }
            }
            return true;
        }
        if (info.name.equals("PanTiltLimits"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PanTiltLimits = (UIIPanTiltLimits)__envelope.get(j,UIIPanTiltLimits.class,false);
            }
            return true;
        }
        if (info.name.equals("ZoomLimits"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ZoomLimits = (UIIZoomLimits)__envelope.get(j,UIIZoomLimits.class,false);
            }
            return true;
        }
        if (info.name.equals("Extension"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Extension = (UIIPTZConfigurationExtension)__envelope.get(j,UIIPTZConfigurationExtension.class,false);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.NodeToken;
        }
        else if(propertyIndex==count+1)
        {
            return this.DefaultAbsolutePantTiltPositionSpace!=null?this.DefaultAbsolutePantTiltPositionSpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+2)
        {
            return this.DefaultAbsoluteZoomPositionSpace!=null?this.DefaultAbsoluteZoomPositionSpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+3)
        {
            return this.DefaultRelativePanTiltTranslationSpace!=null?this.DefaultRelativePanTiltTranslationSpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+4)
        {
            return this.DefaultRelativeZoomTranslationSpace!=null?this.DefaultRelativeZoomTranslationSpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+5)
        {
            return this.DefaultContinuousPanTiltVelocitySpace!=null?this.DefaultContinuousPanTiltVelocitySpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+6)
        {
            return this.DefaultContinuousZoomVelocitySpace!=null?this.DefaultContinuousZoomVelocitySpace:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+7)
        {
            return this.DefaultPTZSpeed!=null?this.DefaultPTZSpeed:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+8)
        {
            return this.DefaultPTZTimeout!=null?UIIExtendedSoapSerializationEnvelope.getDateTimeConverter().getStringFromDuration(this.DefaultPTZTimeout):SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+9)
        {
            return this.PanTiltLimits!=null?this.PanTiltLimits:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+10)
        {
            return this.ZoomLimits!=null?this.ZoomLimits:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+11)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+12;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            int count = super.getPropertyCount();
            if(propertyIndex==count+0)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NodeToken";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+1)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultAbsolutePantTiltPositionSpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+2)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultAbsoluteZoomPositionSpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+3)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultRelativePanTiltTranslationSpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+4)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultRelativeZoomTranslationSpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+5)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultContinuousPanTiltVelocitySpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+6)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultContinuousZoomVelocitySpace";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+7)
            {
                info.type = UIIPTZSpeed.class;
                info.name = "DefaultPTZSpeed";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+8)
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultPTZTimeout";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+9)
            {
                info.type = UIIPanTiltLimits.class;
                info.name = "PanTiltLimits";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+10)
            {
                info.type = UIIZoomLimits.class;
                info.name = "ZoomLimits";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==count+11)
            {
                info.type = UIIPTZConfigurationExtension.class;
                info.name = "Extension";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }



        public int getAttributeCount() {
        return super.getAttributeCount() + 3;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        int count=super.getAttributeCount();
if(index==count+0)
        {
            info.name = "MoveRamp";
            info.namespace= "";
            if(this.MoveRamp!=null)
            {
                info.setValue(this.MoveRamp);
            }
        
        }
        if(index==count+1)
        {
            info.name = "PresetRamp";
            info.namespace= "";
            if(this.PresetRamp!=null)
            {
                info.setValue(this.PresetRamp);
            }
        
        }
        if(index==count+2)
        {
            info.name = "PresetTourRamp";
            info.namespace= "";
            if(this.PresetTourRamp!=null)
            {
                info.setValue(this.PresetTourRamp);
            }
        
        }
                if(index < count)
        {
            super.getAttributeInfo(index, info);
        }

    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}
