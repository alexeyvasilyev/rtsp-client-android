package net.petrocik.onvif.wcf;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import javax.xml.namespace.QName;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public  class UIIInvalidFilterFaultType extends UIIBaseFaultType implements KvmSerializable
{

    
    public java.util.ArrayList< QName> UnknownFilter =new java.util.ArrayList<QName >();

    

    @Override
    public void loadFromSoap(java.lang.Object paramObj,UIIExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);


    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,UIIExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("UnknownFilter"))
        {
            if(obj!=null)
            {
                if(this.UnknownFilter==null)
                {
                    this.UnknownFilter = new java.util.ArrayList< QName>();
                }
                java.lang.Object j =obj;
                QName j1= new QName(j.toString());
                this.UnknownFilter.add(j1);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.UnknownFilter.size())
        {
            QName UnknownFilter = this.UnknownFilter.get(propertyIndex-(count+0));
            return UnknownFilter!=null?UnknownFilter.toString():SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+0+UnknownFilter.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            int count = super.getPropertyCount();
            if(propertyIndex>=count+0 && propertyIndex < count+0+this.UnknownFilter.size())
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UnknownFilter";
                info.namespace= "http://docs.oasis-open.org/wsn/b-2";
            }
            super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
