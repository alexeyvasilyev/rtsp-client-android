package net.petrocik.onvif;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public  class CapabilitiesExtension extends AttributeContainer implements KvmSerializable
{

    
    private transient java.lang.Object __source;    
    
    public DeviceIOCapabilities DeviceIO;
    
    public DisplayCapabilities Display;
    
    public RecordingCapabilities Recording;
    
    public SearchCapabilities Search;
    
    public ReplayCapabilities Replay;
    
    public ReceiverCapabilities Receiver;
    
    public AnalyticsDeviceCapabilities AnalyticsDevice;
    
    public CapabilitiesExtension2 Extensions;
    
    public java.util.ArrayList< PropertyInfo> any =new java.util.ArrayList< PropertyInfo>();

    

    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                    info= __envelope.getAny(info);
                    this.any.add(info);
                }
            } 
        }


    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("DeviceIO"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.DeviceIO = (DeviceIOCapabilities)__envelope.get(j,DeviceIOCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Display"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Display = (DisplayCapabilities)__envelope.get(j,DisplayCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Recording"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Recording = (RecordingCapabilities)__envelope.get(j,RecordingCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Search"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Search = (SearchCapabilities)__envelope.get(j,SearchCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Replay"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Replay = (ReplayCapabilities)__envelope.get(j,ReplayCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Receiver"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Receiver = (ReceiverCapabilities)__envelope.get(j,ReceiverCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("AnalyticsDevice"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.AnalyticsDevice = (AnalyticsDeviceCapabilities)__envelope.get(j,AnalyticsDeviceCapabilities.class,false);
            }
            return true;
        }
        if (info.name.equals("Extensions"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Extensions = (CapabilitiesExtension2)__envelope.get(j,CapabilitiesExtension2.class,false);
            }
            return true;
        }
        return false;
    }    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.DeviceIO!=null?this.DeviceIO:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==1)
        {
            return this.Display!=null?this.Display:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==2)
        {
            return this.Recording!=null?this.Recording:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==3)
        {
            return this.Search!=null?this.Search:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==4)
        {
            return this.Replay!=null?this.Replay:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==5)
        {
            return this.Receiver!=null?this.Receiver:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==6)
        {
            return this.AnalyticsDevice!=null?this.AnalyticsDevice:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==7)
        {
            return this.Extensions!=null?this.Extensions:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex>=8 && propertyIndex < 8+this.any.size())
        {
            return this.any.get(propertyIndex-(8)).getValue();
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 8+ any.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            if(propertyIndex==0)
            {
                info.type = DeviceIOCapabilities.class;
                info.name = "DeviceIO";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==1)
            {
                info.type = DisplayCapabilities.class;
                info.name = "Display";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==2)
            {
                info.type = RecordingCapabilities.class;
                info.name = "Recording";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==3)
            {
                info.type = SearchCapabilities.class;
                info.name = "Search";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==4)
            {
                info.type = ReplayCapabilities.class;
                info.name = "Replay";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==5)
            {
                info.type = ReceiverCapabilities.class;
                info.name = "Receiver";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==6)
            {
                info.type = AnalyticsDeviceCapabilities.class;
                info.name = "AnalyticsDevice";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==7)
            {
                info.type = CapabilitiesExtension2.class;
                info.name = "Extensions";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=8 && propertyIndex < 8+this.any.size())
            {
                PropertyInfo j=this.any.get(propertyIndex-(8));
                info.type = j.type;
                info.name = j.name;
                info.namespace= j.namespace;
            }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
