package net.petrocik.onvif;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public  class Mpeg4Options extends AttributeContainer implements KvmSerializable
{

    
    private transient java.lang.Object __source;    
    
    public java.util.ArrayList< VideoResolution> ResolutionsAvailable =new java.util.ArrayList<VideoResolution >();
    
    public IntRange GovLengthRange;
    
    public IntRange FrameRateRange;
    
    public IntRange EncodingIntervalRange;
    
    public java.util.ArrayList< Enums.Mpeg4Profile> Mpeg4ProfilesSupported =new java.util.ArrayList<Enums.Mpeg4Profile >();
    
    public java.util.ArrayList< PropertyInfo> any =new java.util.ArrayList< PropertyInfo>();

    

    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                    info= __envelope.getAny(info);
                    this.any.add(info);
                }
            } 
        }


    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("ResolutionsAvailable"))
        {
            if(obj!=null)
            {
                if(this.ResolutionsAvailable==null)
                {
                    this.ResolutionsAvailable = new java.util.ArrayList< VideoResolution>();
                }
                java.lang.Object j =obj;
                VideoResolution j1= (VideoResolution)__envelope.get(j,VideoResolution.class,false);
                this.ResolutionsAvailable.add(j1);
            }
            return true;
        }
        if (info.name.equals("GovLengthRange"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.GovLengthRange = (IntRange)__envelope.get(j,IntRange.class,false);
            }
            return true;
        }
        if (info.name.equals("FrameRateRange"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.FrameRateRange = (IntRange)__envelope.get(j,IntRange.class,false);
            }
            return true;
        }
        if (info.name.equals("EncodingIntervalRange"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.EncodingIntervalRange = (IntRange)__envelope.get(j,IntRange.class,false);
            }
            return true;
        }
        if (info.name.equals("Mpeg4ProfilesSupported"))
        {
            if(obj!=null)
            {
                if(this.Mpeg4ProfilesSupported==null)
                {
                    this.Mpeg4ProfilesSupported = new java.util.ArrayList< Enums.Mpeg4Profile>();
                }
                java.lang.Object j =obj;
                Enums.Mpeg4Profile j1= Enums.Mpeg4Profile.fromString(j.toString());
                this.Mpeg4ProfilesSupported.add(j1);
            }
            return true;
        }
        return false;
    }    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=0 && propertyIndex < 0+this.ResolutionsAvailable.size())
        {
            VideoResolution ResolutionsAvailable = this.ResolutionsAvailable.get(propertyIndex-(0));
            return ResolutionsAvailable;
        }
        else if(propertyIndex==0+this.ResolutionsAvailable.size())
        {
            return this.GovLengthRange;
        }
        else if(propertyIndex==1+this.ResolutionsAvailable.size())
        {
            return this.FrameRateRange;
        }
        else if(propertyIndex==2+this.ResolutionsAvailable.size())
        {
            return this.EncodingIntervalRange;
        }
        else if(propertyIndex>=3+this.ResolutionsAvailable.size() && propertyIndex < 3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size())
        {
            Enums.Mpeg4Profile Mpeg4ProfilesSupported = this.Mpeg4ProfilesSupported.get(propertyIndex-(3+this.ResolutionsAvailable.size()));
            return Mpeg4ProfilesSupported!=null?Mpeg4ProfilesSupported.toString():SoapPrimitive.NullSkip;
        }
        else if(propertyIndex>=3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size() && propertyIndex < 3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size()+this.any.size())
        {
            return this.any.get(propertyIndex-(3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size())).getValue();
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+ResolutionsAvailable.size()+Mpeg4ProfilesSupported.size()+ any.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            if(propertyIndex>=0 && propertyIndex < 0+this.ResolutionsAvailable.size())
            {
                info.type = VideoResolution.class;
                info.name = "ResolutionsAvailable";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==0+this.ResolutionsAvailable.size())
            {
                info.type = IntRange.class;
                info.name = "GovLengthRange";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==1+this.ResolutionsAvailable.size())
            {
                info.type = IntRange.class;
                info.name = "FrameRateRange";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==2+this.ResolutionsAvailable.size())
            {
                info.type = IntRange.class;
                info.name = "EncodingIntervalRange";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=3+this.ResolutionsAvailable.size() && propertyIndex < 3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size())
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Mpeg4ProfilesSupported";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size() && propertyIndex < 3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size()+this.any.size())
            {
                PropertyInfo j=this.any.get(propertyIndex-(3+this.ResolutionsAvailable.size()+this.Mpeg4ProfilesSupported.size()));
                info.type = j.type;
                info.name = j.name;
                info.namespace= j.namespace;
            }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
