package net.petrocik.onvif;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 6.0.1.1
//
// Created by Quasar Development 
//
//----------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public  class OSDConfigurationOptions extends AttributeContainer implements KvmSerializable
{

    
    private transient java.lang.Object __source;    
    
    public MaximumNumberOfOSDs MaximumNumberOfOSDs;
    
    public java.util.ArrayList< Enums.OSDType> Type =new java.util.ArrayList<Enums.OSDType >();
    
    public java.util.ArrayList< String> PositionOption =new java.util.ArrayList<String >();
    
    public OSDTextOptions TextOption;
    
    public OSDImgOptions ImageOption;
    
    public OSDConfigurationOptionsExtension Extension;

    

    public void loadFromSoap(java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }


    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("MaximumNumberOfOSDs"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.MaximumNumberOfOSDs = (MaximumNumberOfOSDs)__envelope.get(j,MaximumNumberOfOSDs.class,false);
            }
            return true;
        }
        if (info.name.equals("Type"))
        {
            if(obj!=null)
            {
                if(this.Type==null)
                {
                    this.Type = new java.util.ArrayList< Enums.OSDType>();
                }
                java.lang.Object j =obj;
                Enums.OSDType j1= Enums.OSDType.fromString(j.toString());
                this.Type.add(j1);
            }
            return true;
        }
        if (info.name.equals("PositionOption"))
        {
            if(obj!=null)
            {
                if(this.PositionOption==null)
                {
                    this.PositionOption = new java.util.ArrayList< String>();
                }
                java.lang.Object j =obj;
                String j1= j.toString();
                this.PositionOption.add(j1);
            }
            return true;
        }
        if (info.name.equals("TextOption"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.TextOption = (OSDTextOptions)__envelope.get(j,OSDTextOptions.class,false);
            }
            return true;
        }
        if (info.name.equals("ImageOption"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ImageOption = (OSDImgOptions)__envelope.get(j,OSDImgOptions.class,false);
            }
            return true;
        }
        if (info.name.equals("Extension"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.Extension = (OSDConfigurationOptionsExtension)__envelope.get(j,OSDConfigurationOptionsExtension.class,false);
            }
            return true;
        }
        return false;
    }    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    
    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.MaximumNumberOfOSDs;
        }
        else if(propertyIndex>=1 && propertyIndex < 1+this.Type.size())
        {
            Enums.OSDType Type = this.Type.get(propertyIndex-(1));
            return Type!=null?Type.toString():SoapPrimitive.NullSkip;
        }
        else if(propertyIndex>=1+this.Type.size() && propertyIndex < 1+this.Type.size()+this.PositionOption.size())
        {
            String PositionOption = this.PositionOption.get(propertyIndex-(1+this.Type.size()));
            return PositionOption;
        }
        else if(propertyIndex==1+this.Type.size()+this.PositionOption.size())
        {
            return this.TextOption!=null?this.TextOption:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==2+this.Type.size()+this.PositionOption.size())
        {
            return this.ImageOption!=null?this.ImageOption:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==3+this.Type.size()+this.PositionOption.size())
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 4+Type.size()+PositionOption.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
            if(propertyIndex==0)
            {
                info.type = MaximumNumberOfOSDs.class;
                info.name = "MaximumNumberOfOSDs";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=1 && propertyIndex < 1+this.Type.size())
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Type";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex>=1+this.Type.size() && propertyIndex < 1+this.Type.size()+this.PositionOption.size())
            {
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PositionOption";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==1+this.Type.size()+this.PositionOption.size())
            {
                info.type = OSDTextOptions.class;
                info.name = "TextOption";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==2+this.Type.size()+this.PositionOption.size())
            {
                info.type = OSDImgOptions.class;
                info.name = "ImageOption";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
            else if(propertyIndex==3+this.Type.size()+this.PositionOption.size())
            {
                info.type = OSDConfigurationOptionsExtension.class;
                info.name = "Extension";
                info.namespace= "http://www.onvif.org/ver10/schema";
            }
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
